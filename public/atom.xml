<?xml version="1.0" encoding="utf-8"?>


<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh">
    <title type="text">海外兔</title>
    <subtitle type="html">MemE is a powerful and highly customizable GoHugo theme for personal blogs.</subtitle>
    <updated>2021-05-25T12:01:43+08:00</updated>
    <id>//osjobs.net/interview/</id>
    <link rel="alternate" type="text/html" href="//osjobs.net/interview/" />
    <link rel="self" type="application/atom+xml" href="//osjobs.net/interview/atom.xml" />
    <author>
            <name>Windson Yang</name>
            <uri>//osjobs.net/</uri>
            
                <email>wiwindson@outlook.com</email>
            </author>
    <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights>
    <generator uri="https://gohugo.io/" version="0.80.0">Hugo</generator>
        <entry>
            <title type="text">编程艺术家 Lee215 的算法旅程</title>
            <link rel="alternate" type="text/html" href="//osjobs.net/interview/posts/%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF%E5%AE%B6-lee215-%E7%9A%84%E7%AE%97%E6%B3%95%E6%97%85%E7%A8%8B/" />
            <id>//osjobs.net/interview/posts/%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF%E5%AE%B6-lee215-%E7%9A%84%E7%AE%97%E6%B3%95%E6%97%85%E7%A8%8B/</id>
            <updated>2021-03-29T09:46:55+08:00</updated>
            <published>2020-09-13T16:40:41+08:00</published>
            <author>
                    <name>Windson Yang</name>
                    <uri>https://osjobs.net</uri>
                    <email>wiwindson@outlook.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights>
    
    <summary type="html"><![CDATA[<p>大家好，我是 Lee215，一名普通的算法爱好者，希望通过编程的方式给大家带来愉悦和惊喜的感受。感谢 Windson 的这一次采访。欢迎大家 Follow 我不定期更新的 <a href="https://www.youtube.com/channel/UCUBt1TDQTl1atYsscVoUzoQ">Youtube</a> 和 <a href="https://space.bilibili.com/423728559">B 站</a>。也可以通过公众号 “Lee215的Code” 了解更多。</p>……]]></summary>
            
                <content type="html"><![CDATA[<p>大家好，我是 Lee215，一名普通的算法爱好者，希望通过编程的方式给大家带来愉悦和惊喜的感受。感谢 Windson 的这一次采访。欢迎大家 Follow 我不定期更新的 <a href="https://www.youtube.com/channel/UCUBt1TDQTl1atYsscVoUzoQ">Youtube</a> 和 <a href="https://space.bilibili.com/423728559">B 站</a>。也可以通过公众号 “Lee215的Code” 了解更多。</p>
<div style="text-align:center">
  <img src="https://cdn.jsdelivr.net/gh/OSJobs/osjobs-info@master/assets/imgs/Lee.jpg" style="width:30%; border-radius:50%;"/>
</div>
<hr>
<p><strong>“你现在是 Leetcode 美区分数（reputation）最高的用户，大家都很好奇你的计算机比赛经历，你是从什么时候开始参加计算机比赛的？”</strong></p>
<p>我在初高中时期曾参加过数学竞赛，但大学期间我并没有参加过计算机比赛，本科毕业的时候我还没听说过 ACM （国际大学生程序设计竞赛）。2018 年我开始固定参加 Leetcode 上的比赛并写题解，后来也慢慢接触了 Google Kickstart 以及 CF 等其他类型的比赛。跟许多人的心态不太一样，我当初接触 Leetcode 的初衷并不是因为要面试而去刷题，那时候 Leetcode 还是一个小众的平台，对我来说它更像一个解谜，做数学题的地方。</p>
<p><strong>“你还记得第一次参加 Leetcode 比赛的时候做出了多少题吗？参加了多少次之后能够完成四道题目？”</strong></p>
<p>第一次的时候完成了两三道吧，不太记得了。我在参加了两三次之后就感觉可以做出四道题了。但由于当时对 C++，Python 和 Java 都不太熟练，所以时间不是很够。当年参加比赛的人数少，大概题目也简单一些。</p>
<br>
<blockquote style="font-size:1.6rem;">我写题解并不是为了向大家展示我的算法有多么厉害，而是像看到了一部特别好看的电视剧，愿意去跟大家分享我的一些见解。</blockquote>
<br>
<p><strong>“为什么比赛后还耗费那么多时间去写题解？你写过几百遍题解，对自己哪一篇题解最满意？”</strong></p>
<p>我在公众号的文章写给一句话，我给自己的定位是普通算法爱好者，努力做娱乐主播，争当人民艺术家。当然说自己是艺术家可能有点自夸，不过算法其实和艺术有共通之处。我写题解并不是为了向大家展示我的算法有多么厉害，而是像看到了一部特别好看的电视剧，愿意去跟大家分享我的一些见解，只不过是通过算法题的形式。最满意的题解有三篇：第一篇是<a href="https://leetcode.com/problems/minimum-cost-tree-from-leaf-values/discuss/339959/One-Pass-O(N)-Time-and-Space">1130. Minimum Cost Tree From Leaf Values</a> ，当时 Alex 负责 Leetcode 上所有题解，这道题他准备的是 O(N^3) 的 DP 解法，而我给出了 O(N^2) 的解法以及基于栈的 O(N) 的解法。由于这篇题解我把思路过程写得特别详细和具体，所以大家反馈也特别好。还有一篇题解是 <a href="https://leetcode.com/problems/stone-game/discuss/154610/DP-or-Just-return-true">877. Stone Game</a>，当时有人来问我这道题，然后我就把原题贡献到 Leetcode 上，这道题目不是那种很套路的题目，虽然解答过程很简单，但是有很多的思考的过程在里面，这样的题目我觉得更有意思。最后一篇是<a href="https://leetcode.com/problems/reverse-substrings-between-each-pair-of-parentheses/discuss/383670/JavaC++Python-Why-not-O(N)">1190. Reverse Substrings Between Each Pair of Parentheses</a>, 因为所有人的答案都是 O(N^2) 的，但是 O(N) 的答案其实很通俗易懂，需要一点想象力。特别是看过诺兰新片《信条》后，我又想起了这题，推荐一起服用。</p>
<br>
<blockquote style="font-size:1.6rem;">其实只要代码写得够熟练，就会有更加充分的解题时间，不用花额外时间在语言的细节问题上。</blockquote>
<br>
<p><strong>“到目前为止，你大概做过多少道算法题呢？最大的收获是什么？”</strong></p>
<p>一千道左右吧，但我觉得题目的数量并不重要，从零到两百道的时候，可能各方面增长地特别快，不过从两百题到一千题的整个过程，我感觉并没有非常明显的变化和增长，甚至觉得思路不如我之前灵活了，因为我已经知道这些题的套路，思维也会被这些套路所局限。我在做 Leetcode 过程中最大的收获并不是思维上的提高，而是写代码变得更加熟练。其实只要代码写得够熟练，就会有更加充分的解题时间，不用花额外时间在语言的细节问题上。</p>
<p><strong>“你觉得哪类型的题目最有挑战性？”</strong></p>
<p>有两类吧，一类是图的题目，因为图的题目没有那么直观，而且关于图的一些现成的结论挺多，如果没学过的话这部分挺难的。还有一类我不喜欢的是 NP 的问题。特别是那种用搜索去做的，其实这两类有一个共同点，就是只能暴力去搜索，虽然可以剪枝去优化，但始终需要探讨所有的可能性。这种题我不太喜欢，我也觉得自己写得不太好。</p>
<p><strong>“我刚开始接触 Leetcode 的时候，StefanPochmann 在排名第一的位置遥遥领先，我从没想过有人能够超越他，不过你现在超过了他成为了第一，你做了哪些与其他人不一样的东西让你成为最高分的用户？”</strong></p>
<p>第一，也是最重要的一点就是坚持，有非常长的一段时间我都坚持参加比赛，出答案也出得非常快。现在有许多选手也会在比赛后的第一时间给出答案，但他们可能不够坚持。第二，我对自己的答案质量要求是蛮高的，首先我会保证它一定正确，发现不对的地方我会及时修改。其次是所有的回复我都会看，根据回复对答案保持更新，我每天收到的回复可能比赞的数目还高。最后就是我尽量都会给出多种语言，像是 Java，C++，Python 的解法，在此也感谢各位给我的支持。</p>
<p><strong>“在 Leetcode 上排名第一对你的职业发展有帮助吗？在工作中你自己参与的最有挑战性的项目是什么？”</strong></p>
<p>好像没有吧，我没有和周围的同事说过，他们也不太知道。我感觉兴趣爱好是可以自己选择的，但是工作没有这么多机会可以让你凭爱好去选择，更多的时间是把事情一件一件做好。所以我并没有像大家想象那样，参与了火箭的发射，或者制造了一个无人车。作为程序员，我在工作中真正花在写代码的时间可能只有 20%，剩下的时间都是处理其他事情。</p>
<p><strong>“以下这个问题是最多人想知道的，当你面算法轮的时候，如果在简历上写上你 Leetcode 的 ID Lee215，面试官是不是比你更加心虚？”</strong></p>
<p>哈哈哈哈，我在简历和面试的过程中都没有提过我 Leetcode 的 ID，所以他们应该都不知道。</p>
<p><strong>“那么当你担任面试官的时候，你是怎么去判断这个面试者的能力的？如果你看到他竞赛成绩很好，会有特别的方式去判断他吗？”</strong></p>
<p>我会更看重他的整个思考过程吧，首先我不会出一道难题，然后让你一直做不出来。要是做不出来，我肯定会接几个提示，期待你在我的提示之下，能够一步一步做出来就可以了。起码能让我看出来，要么你准备得很充分，做题很充分。要么就是即使你什么都不背，这个算法也没听过，但是给你一点提示，你能把自己有能力进一步探索。我自己并不是计算机竞赛科班出身，我所在的公司也并没有特别重视竞赛选手，面试官也很少说因为你是一个竞赛选手，我今天一定要出一道难题难倒你，不会有人有这样的心理，大部分人还是出一道很正常的题目，期待你可以比较熟练地做出来，并且能很清楚跟面试官沟通。</p>
<p><strong>“你觉得现在用算法题面试效果怎么样，你有改进面试流程的建议吗？”</strong></p>
<p>我觉得现在的方式挺好的，首先它很有效，而且相对容易去准备。虽然说大家认为大厂的考察门槛普遍比较高，但我们公司考察的内容相对来说会更清晰。一些公司会问你许多细节的东西，而不拿出一个具体的问题，这对无论是刚毕业还是有一定经验的程序员都不是很好准备，而算法其实是特别好准备的。还有一些国内的公司，不一定是互联网公司，他们的标准是看你的第一学历，也就是说你的本科的学校在哪里，他们说没有找到比这更有效的一个方式了。那相比于他们来说的话，我觉得我们做算法题，真是特别的人性化，至少还可以努力。</p>
<p><strong>“有些公司在面试的时候会考特别复杂的数据结构或者以人名命名的算法，例如手写平衡二叉查找树和 Prim 算法，这类题目应该怎么去准备呢？”</strong></p>
<p>解算法题我基本用的都是好用和现成的东西，一些特殊的数据结构我也没有特别仔细学过，但这些知识点你需要明白大致的原理。现在这家公司电话面试的时候我就遇到了一道线段树的题，但是这道题好的地方在于，你不使用线段树也能够得到一个次优解，我也是在写完次优解之后再去写线段树的解法，但我并没有实现它，只是假设有这个 API，并且解释清楚原理。我认为面试官不会仔细地去看你每行代码写得到底对不对，更多的是一你要知道原理，二你能解释清楚，三你会用，这三步可能远比你能把代码一行一行写出来要重要的多。至于有名字的算法，碰上一次，你可能不在意，但是如果碰上两三次的话你就会主动去看，看完理解之后就能变成你自己的东西。而且大部分面试如果考一个准确的有人名的算法的话。它都是非常直白的一道题，这并不是一个难点，也并不会存在你的瓶颈期里边。</p>
<p><strong>“你在做题的时候有遇过瓶颈期吗？就像一道题虽然做过几遍，但是过了一段时间发现还是不会做。遇到这种情况应该怎么去突破它呢？”</strong></p>
<p>我也遇过瓶颈期，其实到现在也是，有特别多的题目我一看就知道不会做，还有的一些我觉得会做，但是怎么写也写不对。其实每个人的瓶颈期差别都挺大的，大部分人我认为还是练习不够，但是最起码你要先达到一个高度，就是能够用代码实现脑海的思路，这就已经挺厉害了。要突破瓶颈期的话，我建议可以多看看别人的解法，看看别人怎么实现的，要是觉得你很接近，自己能够解决，那就使劲花时间写，但这样会花费更多时间。其实像 Alex 也说过，Leetcode 上面有太多不够好的 DP 题了，我也很同意这一点。不过动态规划积累到一定经验的话是可以克服的。而一些栈的问题反而更难想出来，需要花一点苦功夫。</p>
<p><strong>“和你的心态不一样，许多程序员都会以面试的心态去做题，因为许多公司考的都是 Leetcode 上面的题，你如何看待这种情况？”</strong></p>
<p>这个东西就跟应试教育一样，像以前高中的时候，有的人很喜欢数理化，但是不一定能把它做好，有些人做这个的目的就是为了高考，不一定求甚解，但是分数可以考得高，我肯定不会批判他们什么，其实这也很正常。但是很多人他会问我，怎么才能把算法这件事情做好，但是我无法给他们一个满意的答案。我心里会觉得，我没给他们一个满意的答案是不是自己哪里做得不够好，让他们觉得我有什么技巧不愿意告诉他们，但其实并不是这样的。很多人想从我这里找一个捷径，但我无法给到他们。我一般就会跟他们说，第一，有一部分人是其实练习得还不够，功夫还没有下够。第二，我感觉他们不喜欢这个事情，如果一个人不喜欢一件事情，也很难做好它。</p>
<br>
<blockquote style="font-size:1.6rem;">从两百题到两千题之后的整个过程，他们可能是机械地做一件重复的事情，做题多少其实并不能反映出来你的水平和能力。</blockquote>
<br>
<p><strong>“有的求职者刷了许多题但是面试还是表现不好，你觉得他们缺乏的是什么能力？有的人可能就刷了两百道成功进大厂了，你觉得背后的原因是什么？”</strong></p>
<p>很多人面试的时候，他会说自己刷了多少题。但其实从两百题到两千题之后的整个过程，他们可能是机械地做一件重复的事情，做题多少其实并不能反映出来你的水平和能力。每个人做题都有不同的方法，有的人数学基础特别好或者特别聪明，那么他们很快就能举一反三，融会贯通，把面试应试过去，然后把精力放在别的事情上。有些人既然学得没有那么快，那我觉得就是要勤能补拙，就是要下苦功夫。算法这个东西本身其实没有想象得那么难，比高考甚至还简单很多。只要你花时间去做成，其实就能做好。做题有多厉害和工作能力不一定画等号，因为解题就是特别简单的任务，它把所有的限制条件，输入都告诉你，你只需要填几行就可以了。而且能进大厂不代表有多么厉害，我就知道很多人水平没有很好，但还是进去了，面试这个事情肯定需要一定运气的成分，只不过你前面那些努力都会增加你成功的概率。算法能力其实是一直跟着你的，你具备这个思考能力之后，以后在可以应用到别的地方，不仅是刷题，甚至说工作或者下一次跳槽，这些都能用到。所以这些努力都是值得的。而且面试还是很看运气的，苦苦期待面的好进大厂，最后发现不如来瓶雪花，勇闯天涯。</p>
<p><strong>“你怎么看待现在是市场上涌现的算法培训班？”</strong></p>
<p>程序员花钱上课，能很快地知道这些东西该怎么做再拿到大厂的 Offer，我觉得这笔投入其实挺划算的。因为程序员，尤其是在北美地区每一个月的工资都挺多的。而且对于北美的应聘者来说，拿着北美的工资，但是在全球的学习成本是一样的。另外站在算法班的角度，他们还是挺能赚钱的。这件事情我觉得挺好的，我看着挺眼馋的。</p>
<p><strong>“你自己有开办算法培训班的计划吗？有不少算法培训班联系过你录制课程吧？”</strong></p>
<p>我一开始做算法题只是为了兴趣而不是为了赚钱，之前也曾经在算法群里和其他人一起轮流免费讲课，但是从没有大张旗鼓地去招学生或者利用我自己的名声四处揽财。开培训班的话，如果有一个特别好的契机的话，我觉得是没有问题的，一对一教算法也是可以的。联系我录课程的培训班说实话并没有很多，因为我也没主动联系他们，而且他们并不缺老师。其实算法大家都教，不同老师肯定教的侧重点不同。听我的课和别人的课，对学生的帮助上也肯定会有不同，但这个区别其实很微妙。</p>
<p><strong>“如果你觉得让中国在编程世界更有影响力的话，是不是应该更多让其他人看到国人的项目或者视频，例如给你的 Youtube 视频加上英语字幕。还是说这个其实不重要，只要乐于分享自己的知识就好，我看你也在帖子里鼓励其他人去学习中文。”</strong></p>
<p>在我的 Youtube 频道下面，很多人都让我出英语视频或者加上英语字幕，他们说这样肯定很多人要订阅你，粉丝会暴涨。但是最开始我做这个频道的原因并不是因为我想红，或者要当一个 Up 主去赚钱。最初原因是因为我用英语写文章解释得不够好。用中文解释的话有时候更能表达我整个思考的过程，我说得更舒服，更贴切，也可以给大家开心一下。但是现在我在家，视频都不一定出，再用英文的话，我就已经挺累的。如果还要加个英语字幕的话，我感觉我不会做这个事情。</p>
<p><strong>“现阶段国人开发和维护的开源项目数量比较少，最出名的就是 Vue，如何鼓励年轻的程序员去参与开源项目？</strong>”</p>
<p>这个问题还挺大的，我一个人肯定解决不了。有一点原因可能是跟竞争有关系。中国人这么多程序员，大家还吃不饱饭，要花时间去来做社区就比较难。这方面可以借鉴一下印度人的做法。我觉得很多的印度程序员，咱不说他的水平怎么样，他们不管做什么事情都愿意做个网站或写个 Blog。其实我有时候感觉他们写得没那么好，但是他们就特别爱这个事情。常有一些人在我的那个帖子底下贴上他们 Youtube 的链接。就说如果不明白的话来看我的视频，他们还是挺擅长宣传自己的，我觉得这是国人值得学习的。</p>
<p><strong>“你能推荐一些算法方面的学习资源给大家吗？”</strong></p>
<p>我没怎么看过算法书，推荐不了，不过我能推荐很多有意思的数学书，例如《从一到无穷大》。</p>
<p><strong>“你自己的偶像是谁？例如名人或者科学家？”</strong></p>
<p>这太难选了，我一般都说我喜欢杨幂，哈哈哈哈，北京大妞，我觉得性格挺爽朗的。</p>
<p><strong>“如果可以随便选世界上任意一个地方，你会想去哪里工作呢？</strong></p>
<p>如果抛开身份政治和安全问题的话，我会愿意一直在美国工作。因为美国的机会多，项目多，无论是待遇还是 Work Life Balance 都更好，这几点都很重要。我也很仔细考虑过去日本新加坡或者欧洲工作，人生体验也蛮重要的，除了个人发展方面，偶尔换个地方换个环境都挺好的。</p>
<p><strong>“如果可以重新选择的话，你会有不同的职业规划吗？”</strong></p>
<p>如果可以重新选择的话，我不一定会学计算机，本科的时候我原本想学的是经济管理，后来误打误撞才学了计算机。我感觉数学物理是指导整个客观世界的，而经济学会研究人类社会一些决策与一些规律，我觉得挺有意思的。不过即使不学计算机，算法题也是可以做的。因为只要会编程就好，不一定非得是计算机学院。其实我高中想当一个能做班主任的体育老师，为生病的数学老师代课。</p>
<br>
<blockquote style="font-size:1.6rem;">如果你只是把算法当成一个敲门砖的话，就找你认为最有效的方式去把这个事情搞定。也不用在意为什么别人做得比你好，应该多下点功夫。</blockquote>
<br>
<p><strong>“有什么其他建议给你的粉丝以及我们的读者吗？”</strong></p>
<p>算法只是程序员面试里的的一部分，如果喜欢的话，我觉得就是多做一做，我也比较喜欢和这样志同道合的朋友一起交流。如果你只是把算法当成一个敲门砖的话，就找你认为最有效的方式去把这个事情搞定，也不用在意为什么别人做得比你好，应该多下点功夫。给正在读书的读者的建议是别读研究生。我之前读了研究生，算是我走过的弯路。职场上研究生和本科生待遇和其他方面并不太会有多大的差别，还不如本科毕业直接找你喜欢的公司，工作两年给你带来的收益可能会比你读两年书要多。当然去美国读研究生，或者通过研究生转行的，还是有意义的，不包括在此。不管做什么选择，也不算弯路，只是一些远路，也能看一些远路上的风景。</p>
<p><strong>致谢</strong></p>
<p>最后不禁加一个感谢环节，朋友在我的算法旅程，对我产生莫大影响，见证了我从一只稚嫩的菜鸡成为一只成年鸡。
<br>
• 感谢一言学长，一个经典投票问题，作为饭后甜点，大快朵颐。学长一言，醍醐灌顶，完美向我诠释了，什么是算法。只可惜没有好心人早日引荐，相见恨晚。
<br>
• 感谢耗蚊弟弟，带我了解LC的周赛，让我知道，原来submit debug大法会被罚时的。还让我明白了，什么是dfs/bfs，时至今日我还是觉得dfs和dp差不多一回事。人生在世，知音难觅，有机会早日带你dota超凡入圣。
<br>
• 感谢awice,  默默替LC背了无数黑锅。别人总问我算法看过什么学习材料，现在想来你的python写的是极好的。想念一起玩stone game的日子，不多说了，反正中文你也读不懂。
<br>
• 感谢慧峰法师，鸽了我们第一次的Google HashCode，我才获得了历史最佳成绩。众口难调是客观现实，你用行动告诉我，唯有刚正不阿，能者多劳。曾经我们一起跨过山和大海，现在我自己越过山丘，却发现无人等候。
<br>
• 感谢cuiaoxiang，我见青山多妩媚，青山见我应如是。你是行走的算法辞海，为我引经据典，我觉得我还值得再抢救一下。纵有十倍的天赋，还可以尽百倍的努力，这一点比什么都可贵。青山不改，绿水长流，远的祝愿不多说了，祝你秋季赛斩获三甲好了。
<br>
• 有缘人太多，还有零一二三四五，期待未来和你们有更多交集，感谢。</p>]]></content>
            
            
            
            
            
                
                    
                
                    
                
            
        </entry>
    
        <entry>
            <title type="text">从汽车工程师转变为软件工程师</title>
            <link rel="alternate" type="text/html" href="//osjobs.net/interview/posts/%E4%BB%8E%E6%B1%BD%E8%BD%A6%E5%B7%A5%E7%A8%8B%E5%B8%88%E8%BD%AC%E5%8F%98%E4%B8%BA%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88/" />
            <id>//osjobs.net/interview/posts/%E4%BB%8E%E6%B1%BD%E8%BD%A6%E5%B7%A5%E7%A8%8B%E5%B8%88%E8%BD%AC%E5%8F%98%E4%B8%BA%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88/</id>
            <updated>2020-06-01T09:24:16+08:00</updated>
            <published>2020-05-31T15:46:41+08:00</published>
            <author>
                    <name>Windson Yang</name>
                    <uri>https://osjobs.net</uri>
                    <email>wiwindson@outlook.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights>
    
    <summary type="html"><![CDATA[<p>大家好，我是 Xiaosong，之前在 DLR 担任汽车工程师，最近入职了甲骨文云计算的基础架构部门。从读研究生到工作这段时间，我在美国待了三年时间。</p>……]]></summary>
            
                <content type="html"><![CDATA[<p>大家好，我是 Xiaosong，之前在 DLR 担任汽车工程师，最近入职了甲骨文云计算的基础架构部门。从读研究生到工作这段时间，我在美国待了三年时间。</p>
<div style="text-align:center">
  <img src="https://cdn.jsdelivr.net/gh/OSJobs/osjobs-info@master/assets/imgs/Xiaosong.jpg" style="width:30%; border-radius:50%;"/>
  <a href="https://www.linkedin.com/in/xiaosong-lu/" style="display:block;"/>Xiaosong Lu | 领英</a>
</div>
<hr>
<p><strong>“你当初为什么来到美国的？这里的哪些方面吸引你从德国过来？”</strong></p>
<p>我本科在上海科学技术大学就读机械专业，通过学校的交流项目后来在德国埃斯林根应用技术大学获得汽车工程的硕士学位。刚开始我在德国 DLR 公司负责车辆传感器和组件的评估工作，那时候感觉德国实在太无聊，我已经在考虑回国了，后来因为家人的因素来到了美国。由于美国制造业形势和薪资待遇都不太好，而且刚来的时候没有身份，所以我在这里攻读软件工程硕士，毕业后就在这里工作了。美国吸引我的是它像中国一样比较注重公平，有多少能耐就赚多少钱，虽然同样缴纳快 40% 的个人所得税，但是工资的绝对值要高得多。相反的话西欧的国家更倡导平等，大家赚的钱也都差不多。</p>
<p><strong>“你是如何选择合适的学校的？”</strong></p>
<p>我在美国就读的是加州州立大学富尔顿分校，这个学校在本地的口碑还不错。我选择这里的主要原因是价格便宜，其他学校一年可能就要5万美元，但是这里学费，住宿费，停车费和保险费全加起来也就3万3美元左右，加上18个月就能毕业，三年的 OPT 签证，而且作业都是一些简单的就业项目。</p>
<p><strong>“你本身不是计算机专业，那么是如何从零学习编程，弥补简历以及项目经验的劣势？”</strong></p>
<p>学习编程的过程中，我最感谢的是一位同班同学，他之前在国内已经工作了三年，最近入职了亚马逊。他在我们学校里算经验比较丰富，所以基本他做什么我就做什么。他带着我刷题，上论坛，上 Leetcode 注册会员，要是我准备去哪个公司面试，他会先去面试然后再和我讲面试面了什么，有这样的一位同学或者学校有这种氛围，能省下许多时间。简历方面，虽然我现在只有一年的工程师经验，但是拿到面试的概率还是挺大的。根据我的经验，美国的 HR 虽然对技术细节都不太了解，不过他们在脑海中大致会有一个模版或者参照的例子，如果这个人的简历写成这样，那么大概率面试会过，如果写成其他样子，那么通过面试的概率不大。改进简历有几个方法，第一，一亩三分地上有人会把自己的简历放上去请大家给建议，你一眼就能看出来哪些写得不错，哪些写得不行，可以学习那些写得好的人。第二，我一开始写简历的时候，也是用一些花花绿绿的模版，写得比较花哨，所以也没人理我。后来我在 Overlaf 找了一个朴实无华的 Latex 模版，把内容往里面填上去，再把关键词写上，拿到面试的概率也高了很多。项目经验方面，我报了一个项目培训班，不过在实际面试中我基本没遇到问项目细节的，仅有几次是因为我之前做过的东西跟他们做的差不多所以面试官问了一下。还有因为我考了 AWS 助理架构师的证书，面试官问了我一些架构设计方面的问题。所以我觉得项目经验是可以有一些水分的，把关键词以及比较时髦的技术写在简历上会比较加分，实际面试中很少面试官会去问，因为每个人的做法不一样，也没法去验证。</p>
<p><strong>“你上过哪些培训课程？从里面推荐一个课程的话，你会推荐哪个？”</strong></p>
<p>我上过九章算法和来 offer 的编程班，九章算法的班挺便宜，也就一两百块，来 offer 不差钱的话也可以考虑报名。你问我值不值呢？我觉得不是特别值。但是有没有帮助呢？肯定是有帮助。如果有一位朋友之前上过了，他/她知道这些套路给我讲一遍的话，那么不去上这些班也没什么影响。不过如果是一个刚毕业什么也不懂的学生，找一个九章算法或者来 offer 的项目班去听一听可以节省许多时间。对于一些有算法能力，例如 Leetcode 已经刷了 200 道题，简历也没有什么问题的同学，我推荐上一门叫 Leetcode 算法题型总结的课，这个课对面谷歌这类的公司应该会很有帮助。如果只想面亚马逊，甲骨文这种对算法没那么重视的公司，或者简历还不太行的话，可以报一个九章的项目班或者系统设计的班。几百块就可以学习到很多内容。</p>
<p><strong>“转专业的过程中，你遇到最大的困难是什么？”</strong></p>
<p>我最大的困难就是不知道学什么，以及哪个东西学到什么程度就够了。因为找工作的话，你需要比较全面的技能，如果没有一个有工作经验的人带你的话，你不知道你最欠缺的是什么，我比较幸运，我有三个同学都是在国内工作过的，在学校中算技术比较好的。他们会告诉我需要学什么，需要补哪方面的知识，这点很重要，可以节约很多时间。而且学校的氛围也很重要，如果你所有的同学都是搞学术的，那就不太适合找工作。因为他们不懂就业市场喜欢什么。比如现在 docker 没有那么火了，但是学校里面还是把这东西当成非常热门非常新的技术。其实不一定很多人在用这些东西。所以除了学校的东西还需要去自学。</p>
<br>
<blockquote style="font-size:1.6rem;">我会上学第一天就开始刷题，然后学习系统设计。</blockquote>
<br>
<p><strong>“如果能够重来一遍，你会做哪些不一样的东西呢？”</strong></p>
<p>我会上学第一天就开始刷题，然后学习系统设计。刷题需要熟能生巧，不一定是算法理解地非常好才会做。我一开始上了一些算法课，发现还是不懂。后来有人告诉我背就好了，我背了五十道题之后，就习惯成自然了，理解地更深刻一点。到现在为止，我 Leetcode 也就刷了两百多题，不过面试还没遇过做不出来的题。我现在最大的瓶颈就是系统设计。我面亚马逊以及甲骨文的时候，五轮面试里面四轮都是设计题。系统设计不会就是不会，关键是你工作了之后也不会，因为上班也只是个拧螺丝的，也不知道别的组是怎么做的，所以还要自己去学，不是上班多少年就会的。这个我觉得挺关键的。</p>
<p><strong>“你对于转专业有什么看法吗？你会劝其他专业的人转软件工程吗？”</strong></p>
<p>我原本是强烈建议转软件工程师的，不过现在不太建议了。第一是疫情的原因，我认识很多 USC，UCI 这些不错的学校今年毕业的学生，他们的 CS 就业没有受到太大影响，不过电子工程专业转软件工程师的就业率很低，在 10% 到 30% 左右。而去年之前都能达到百分之七八十。第二是转专业的窗口在慢慢缩减，机会越来越少了。这个行业一开始实在人才紧缺，所以才会开一个窗口给其他专业的人转过来，但是如果供求比差不多的话，那么就会开始良币驱逐劣币。第三是个人因素，差不多是一年以前吧，我在一亩三分地发了个转专业的贴子，主动来找我的大概 50多个人，真正入学的大概十个，到最后就业成功的也就几个同学。就像学数学一样，有的人学很多很多遍，也不会这个数学题。如果有身份的话其实不一定要转软件工程师，有许多其他选择，比如做柜台，做一些商业推广，商业分析这些都可以。</p>
<br>
<blockquote style="font-size:1.6rem;">靠谱的内推是很重要的。</blockquote>
<br>
<p><strong>“你是如何找到自己的第一份工作的？为什么离开上一家公司然后加入甲骨文？”</strong></p>
<p>我找工作的过程比较顺利，经过朋友的内推进入了一家中型的电商公司 iHerb，一开始我的岗位是全栈工程师，因为研究生的时候比较忙，也没学习到太多东西，所以什么也不懂，压力非常大，不过同事都挺好的，所以不懂就问问同事，一边上班一边学。后来感觉软件工程做起来也没什么太大压力。每天工作真正工作的时间为六个小时，其他时间就在跟同事聊聊天吃顿饭，每天有两小时写代码的时间就很多了。最近由于公司重组，我的组长和几位同事都离职了，正好一位同事的堂哥在甲骨文做经理，所以内推我去面试，最后给的薪资也不错，所以我就加入了甲骨文，现在入职了两个月的时间还在培训的阶段，靠谱的内推是很重要的。</p>
<p><strong>“你如何看待印度人在公司抱团这样的说法？你有遇过这样的情况吗？”</strong></p>
<p>我没有遇过印度人抱团影响我的事情，我觉得每一个人你如果你想在一个新环境混下去的话，你肯定得找个组织吧。像我也一直找组织，找亚洲人比较多的公司以及亚洲人比较多的组，在亚洲人比较多的组里面，大家压力都没那么大，也比较好交流。我感觉我们组的印度人我觉得都蛮好的，我上学时候的印度朋友也不错。虽然沟通交流上面有一些小问题，但是总体来说都挺好的。</p>
<p><strong>“你未来有什么打算吗？”</strong></p>
<p>新公司先做着，看一看有没有更好的机会吧。现在公司看起来还不错。选的组还不错。如果以后如果薪资方面会有在百分之五十的增幅。公司和未来前景都不错的地方，我觉得我还可以再试试别的公司，未来的职业发展，我原来想走管理方向的，后来我发现管理实在太累了，所以以后应该会向纯技术发展。纯技术虽然薪资的瓶颈来得比较早一点，但是投入产出比会比较高。</p>
<p><strong>“最后，对于要到美国留学或者工作的读者，还有什么其他建议吗？”</strong></p>
<p>如果转专业在美国的话在美国的话，目前来看比较稳妥的方式还是转软件工程，但是在国内很多的中介，他可能把数据分析工程师，数据科学家，机器学习等吹捧得过高。实际上在我们公司和我认识了一些在其他公司的情况来讲的话，对数据工程师的需要量是远少于软件工程师的，我认识几个人，实力也挺强的，但是找工作和薪资待遇各方面并不是特别好。如果是想在美国留下来过工作生活平衡的生活，就不要考虑兴趣方面，还是随波逐流比较好，不要太标新立异。还有一个误区就是不不要把太多时间放在一些网课上。如果想就业的话，你应该去真正的了解一下实际上工业项目是怎么做的。</p>]]></content>
            
            
            
            
            
                
                    
                
                    
                
            
        </entry>
    
        <entry>
            <title type="text">谷歌HR的新加坡十年</title>
            <link rel="alternate" type="text/html" href="//osjobs.net/interview/posts/%E8%B0%B7%E6%AD%8Chr%E7%9A%84%E6%96%B0%E5%8A%A0%E5%9D%A1%E5%8D%81%E5%B9%B4/" />
            <id>//osjobs.net/interview/posts/%E8%B0%B7%E6%AD%8Chr%E7%9A%84%E6%96%B0%E5%8A%A0%E5%9D%A1%E5%8D%81%E5%B9%B4/</id>
            <updated>2020-05-06T20:02:08+08:00</updated>
            <published>2020-04-05T18:46:41+08:00</published>
            <author>
                    <name>Windson Yang</name>
                    <uri>https://osjobs.net</uri>
                    <email>wiwindson@outlook.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights>
    
    <summary type="html"><![CDATA[<p>大家好，我是 Kayla，目前在谷歌 APAC Staffing 团队负责亚太地区的软件开发工程师招聘，之前在 Sea Group（Formerly Garena）新加坡总部负责 R&amp;D 研发部门的招聘工作。从读大学到工作这段时间，我在新加坡已经待了十年了。</p>……]]></summary>
            
                <content type="html"><![CDATA[<p>大家好，我是 Kayla，目前在谷歌 APAC Staffing 团队负责亚太地区的软件开发工程师招聘，之前在 Sea Group（Formerly Garena）新加坡总部负责 R&amp;D 研发部门的招聘工作。从读大学到工作这段时间，我在新加坡已经待了十年了。</p>
<div style="text-align:center">
  <img src="https://cdn.jsdelivr.net/gh/OSJobs/osjobs-info@master/assets/imgs/Kayla.jpg" style="width:30%; border-radius:50%;"/>
  <a href="https://www.linkedin.com/in/kaylajs/" style="display:block;"/>Kayla | 领英</a>
</div>
<hr>
<p><strong>“你当初为什么来到新加坡的？之后为什么一直在这里工作？”</strong></p>
<p>小的时候，出国读书就是我的目标之一，我爸觉得应该去一个安全稳定的国家，那时候新加坡政府和中国教育部有一个奖学金合作项目，提供新加坡留学的机会给初三、高二、大一的学生。本来初三的时候我就打算考这个奖学金，但是报名前夕我爸觉得我的年纪还太小，而且没有独立生活的经验，于是临时退出了。后来我在高中寄宿的时候积累了一些生活能力，所以高二的那年我再次报考，通过了选拔考试之后，我在新加坡读了半年预科之后进入新加坡国立大学计算机学院就读。因为我拿到了全额奖学金，而这个奖学金有一个附属条件，毕业之后要在新加坡注册的公司工作六年，因此我就一直在这里工作了。</p>
<p><strong>“刚到新加坡的时候，你是如何融入这里的环境的？”</strong></p>
<p>我初中高中就读的是厦门外国语学校，英语基础还不错，但是与以英语为母语的同学相比肯定还有差距，有一段适应和过渡的时期，不过总体来说，我算融入得不错的。我的建议是保持开放的心态，例如做小组课题或者做项目的时候，不要中国人抱团，这样的话没办法和其他同学认识、接触、互相了解和学习。</p>
<p><strong>“新加坡是怎么样的？例如它的饮食，天气，交通和消费水平？”</strong></p>
<p>首先是饮食，有份全球最佳餐厅的榜单，新加坡的餐厅经常上榜。在这里，各个菜系与各个价位的美食都有，不管你是怎样的收入人群都能找到好吃的东西。气候你说他好吧，确实也挺好的，没有酷热和严寒，一年四季都是夏天，你也不需要买不同的衣服，挺省钱的，更不用担心地震与台风。但是不好的话，就是四季如夏其实挺无聊的，感觉不到时间的流逝。从交通方面来说，这里的交通还蛮便宜的，地铁费 1-3 新加坡元（ 5-15 人民币），出门去上班或者逛街的话，基本上非常方便，也不太需要买车。消费水平的话，新加坡的物价在全球一直属于前列，住房是里面比较大的一笔支出，我现在住的是新加坡提供的政府组屋（HDB），大部分新加坡人住的也是这类住房。一个普通单间的话，每月租金在800-1500新加坡元之间。日常吃喝支出跟国内一线城市差不多，可能比上海还稍微便宜些。</p>
<p><strong>“当初一起过来的同学现在还留在新加坡吗？你会建议大家来这里工作吗？”</strong></p>
<p>现在我们都还留在新加坡，有一位女生还在读博士，另外一位男生比较喜欢新加坡的环境，所以在考虑转公民以及买房。整体来说我挺推荐大家来新加坡工作的，首先新加坡是一个 70% 为华人的社会，不会有太大的语言障碍，有良好的治安环境，女性晚上一个人出门也不用担心安全问题。其次如果想出国或者移民到其他地方的话，这里也是一个蛮好的中转平台。当然它也有不好的地方。比如说大家说的地方小，无聊。像美国或者欧洲的话，周末的时候可以开车去周边旅游，看看国家公园，沙漠之类的。新加坡就本国而言，因为土地有限，一些文化和娱乐活动相对于国内一线大城市来说比较匮乏，这是个无法改变的现实。但是从另一个方面来说，它是一个国际化港口，所以你去其他国家非常方便，周末小长假去东南亚周边国家，或是长假去澳洲、欧洲、北美，都没问题。总体说来的话，新加坡是一个不错的安身立命的地方，工作机会相对来说是比较公平的，福利，工资各方面都挺好的。</p>
<p><strong>“有哪些推荐的新加坡求职方式呢？例如找内推，猎头，通过领英或者另外的求职平台？”</strong></p>
<p>我觉得这几个都可以。每家公司招聘的优先渠道都不一样，要根据公司的实际情况去分析。这几个渠道大部分公司的招聘团队都会去看的，所以自己要多多尝试一下。通常来说，内推都是一个最好的渠道，应该优先去找内推。我觉得猎头反而是应该放到比较后面的一个选项，因为猎头的水平相对参差不齐，无法保证每个猎头都是靠谱、专业的，更有甚者只是“骗取”你的信息。</p>
<p><strong>“毕业之后，你为什么选择加入 Sea？在 Sea 的工作经历是怎样的？”</strong></p>
<p>Sea 是大学学长内推我进去的，也是我拿到的第一份 offer。我的性格比较随遇而安，所以没想太多我就接受了。刚加入的时候 Sea 还只是初创公司，整个新加坡不超过五百人，处于野蛮增长期。一开始我在公司早期的移动业务团队（手游部门、电商 Shopee 早期团队）负责招聘，而后转岗到 R&amp;D 研发团队专职技术类岗位招聘。那段时间要做的事情真的很多，而且我们没有大公司的招聘经验，需要自己去摸索和研究，工作时间相对较长（有得有失嘛）。</p>
<br>
<blockquote style="font-size:1.6rem;">每个人在每个阶段看重的东西不同，知道自己想要什么就好。</blockquote>
<br>
<p><strong>“之前我看过一些国外工作的经验分享里面都强调不加班，工作生活平衡。<br/>但是你提到在 Sea 的时候工作时间比较长，你是如何看待类似 996 的加班的？”</strong></p>
<p>996 这样的加班一定不是可持续的，但是我一直觉得每个人在每个人生阶段目标不同，每个公司所在的阶段也不同。我在 Sea 的时候，公司在 pre IPO 暴涨期，是真的忙而且忙得有意义，我也很愿意加班（真的）。刚毕业的前两年就算是公司 + 家两点一线我也过的很开心，成长也非常快，这点是在成熟的大公司不可能有的经历，尤其是对于应届毕业生来说。每个人在每个阶段看重的东西不同，知道自己想要什么就好。996 不是什么万恶不赦的东西，对于事业型的人来说，得到的成就感和回报也是很多的啊。</p>
<p><strong>“离开 Sea 以后你选择加入谷歌，谷歌有什么吸引你的地方吗”</strong></p>
<p>在 Sea 的时候，我当初负责整个总部研发团队的技术招聘，做的还不错，老板也很赏识我，其实我在那边的话过的还蛮舒服的，既有挑战性，也能得到足够的支持。之所以加入谷歌，我主要考虑的是在 Sea 这种成长型的公司，当初做的所有事情都是我们自己摸索的，我们并不知道大公司是如何做这件事情的。比如说，招聘到底是不是应该这样做？从流程上来说，怎样才是最合理的？我们对于成熟公司的招聘方式其实是没有概念的，而这点是谷歌能够教我的。</p>
<p><strong>“谷歌的招聘团队是怎样的，想要加入的话应该如何准备简历以及面试呢？”</strong></p>
<p>谷歌的招聘团队有非常多样性的背景，不同国籍不同专业的都有，例如我是理工科的，也有学心理学，艺术的；有从大公司过来的，也有从非常小的创业公司过来的，欢迎大家加入我们。从求职的角度来说，第一是需要具备基本的英语听说读写能力，因为不管是面试，工作，还是日常生活，英语都是必不可少的。第二是需要提前对公司进行调研，了解这个团队它是怎么样的架构。平常的工作日常是怎么样的。第三要好好准备简历，简历是给 HR 的第一印象。虽然我觉得不需要花费太多时间去把简历做得完美无瑕，但是有几个重点要注意：首先是简历中只放最基础，最核心的东西，做到框架清晰，突出重点信息。这个看似容易，但是许多人都做不到。其次，简历里面的工作经历需要按照 STAR 法则，情境 (situation)、任务 (task)、行动 (action)、结果 (result) 这几点去详细描述，这样才能突显出求职者对项目的实际影响。说到现场面试的话，我的准备过程是按照时间线去梳理之前的项目经验，不需要特别详细的一句句写下来，但是要思考哪些项目需要突出，哪些项目是自己主导的，以及哪里做得好，哪里需要改进。这样既能够做好自我反思，也能够应对面试中可能问到的问题。另外，很多大公司包括谷歌，都会问一些假设性的，非专业相关的问题。例如什么情况下，你会怎么做，然后你会怎么改善它，这些其实是有模板可以套用的。所以需要提早预习，列下提纲，自己先想清楚怎么回答。</p>
<p><strong>“你在这两家不同背景与文化的公司都待过两年，有什么不同的感受吗?”</strong></p>
<p>Sea 的价值文化比较像国内的 BAT，相对含蓄，不是那种会把鼓励和赞赏放在嘴边的，更多的是务实地做事情和脚踏实地。我之前的主管也是做技术出身的，也比较不善于表达。我其实知道他满意我的工作，但是我不知道我对他以及对团队有多重要。直到我提出离职之后，他挽留我和给我加薪水的那个过程，让我感觉原来我在这个团队是这么重要的，原来我做的一些东西是真的被看在眼里。后来别家公司的 HR 和我说，之前我的老板跟她提到，说我是他培养过带过的最好的 HR，可惜后来去了谷歌，这类从第三方口中听到的称赞就感觉挺好的。相反的，谷歌就是典型的美国公司，以鼓励为主。做了一些小事情的话，就 Amazing、Fantastic、Wonderful 这样一辈子学过的形容词都要听到了。你做的每件事情会得到及时充分的认可；如果你做了职责范围之外更进一步的东西，你就会得到更多的认可，而且其他团队的人也会给到我们足够的鼓励和感谢。</p>
<br>
<blockquote style="font-size:1.6rem;">新加坡是一个相对公平的一个环境。更多的是看能力，而不是年龄。</blockquote>
<br>
<p><strong>“国内程序员经常会讨论中年危机这个问题，你是如何看待中年危机的？”</strong></p>
<p>公司如果经历过一段野蛮式增长之后，它一定会需要有业界经验的人才来加入团队，很多行业应该是很欢迎那些有经验的人才。而且这一部分人如果从全家移民的角度出发的话，相对来说也会比较容易。新加坡是一个相对公平的一个环境。更多的是看能力，而不是年龄。我认为出国工作的话，自我定位要清楚，不要因为自己的年龄或者履历所以一定要找高级别的岗位，首先心态要摆平。我记得之前有一位候选人，四十岁左右，他在国内华为工作十几年了，已经做到技术的主管，手下有十几二十人团队。他带着老婆孩子移民到澳洲，在澳洲找工作的时候，他的心态很好，没有一定要找跟国内匹配的主管岗位或者一定要带团队，因为国外的互联网环境也跟国内不太一样，也没怎么刷过题，刚开始的话也只是在小公司作为合同工工作，一些国内候选人看起来会觉得有点 low 的岗位。但是他知道这个阶段找到一份工作是对他最重要的事情。他边提升自己的语言能力，边寻求更好的工作机会，现在加入了亚马逊。我挺佩服他的，也很感动他这个年龄还愿意去做这些事情，做这些努力。</p>
<p><strong>“你经手过那么多不同国家不同背景的候选人，国人面试的时候会有一些通病吗？”</strong></p>
<p>我一般不太倾向于用国家来区分候选人，因为同样的问题，在不同国籍的候选人上都会出现，所以这个并不是一个特别好的区分方式，但是会有一些常见的共同特质。例如语言方面，中国的候选人如果没有在国外读书或者工作经验的话，往往会觉得自己英语不够好，还有不够自信。其实对于技术类的岗位来说，我们并不是要找一个英语母语的人，许多人会觉得自己的英语不够好，其实能够运用好英语作为一个工具其实就足够了。</p>
<br>
<blockquote style="font-size:1.6rem;">要知道每个地方都有它的优点和缺点，首先你要想清楚为什么来这里。</blockquote>
<br>
<p><strong>“最后，对于要到新加坡留学或者工作的读者，还有什么其他建议吗？”</strong></p>
<p>不论是打算留学，还是出国工作，大家真的要想清楚，不是说国外的月亮做一定更圆，不是每个人都适合并且能够适应在国外生活的。我身边有一些案例，出来读书或者工作之后发现自己融入不了当地社会，然后导致抑郁症，甚至自杀的。还有一点，我们这一代大部分都是独生子女，你也知道，中国的长辈都会觉得生病了不要跟孩子讲，尤其是在外地或在国外这些不在身边的，一方面是因为回不来，另外也不想耽误我们工作。如果你家人运气不好或身体不是特别好的话，应该多花时间陪伴他们，不然可能就是后悔一辈子的事情。当然，我们在出国前也无法知道自己合适不合适，可能也想不了那么远。所以我觉得出来看看这个世界还是挺好的。要知道每个地方都有它的优点和缺点，首先你要想清楚为什么来这里。你所在的行业在这里容不容易找到工作？新加坡毕竟是一个行业有限的地方，主要依靠港口贸易、金融以及科技业。不是说所有的工作以及行业都容易让外国人找到工作。所以这大家自己可能还是要做一些功课，知道自己的所在已经在这里到底是怎么样一个情况，然后再进行求职方面的一些研究和努力。大家可能更多的可以找一些在当地呆得比较久的人了解清楚当地的生活情况，有条件的话可以去旅行几天然后再做出决定。我推荐一些公众号给大家了解新加坡，“新加坡眼微信公众号”和“新加坡狮城椰子”。</p>
<h5 id="采访者感受">采访者感受</h5>
<p>Kayla，她有着优秀的学校背景，但是走的也并不是毕业进大厂的路线。而是选择加入当地的创业公司积累经验，几年后再进入谷歌。某程度上，即使是学霸，他们的起点也没有想象中那么高，许多求职者只是没有找对自己的方向而已。</p>
<p>我对于 Kayla 提到的，许多国内求职者缺乏自信，尤其是英语方面深有感受。我之前遇到一位国内的求职者，他有着不错的计算机技术以及丰富的项目经验，但是因为学历不出众以及运气不好，最近的两家公司都在在职的时候倒闭了，导致在职时间都不长。或者因为这个原因他一直拿不到国内大厂的面试机会。他和我说，“哪怕只要给我一个面试机会，让我知道有希望进去也好。” 我理解他的心情，连面试机会都拿不到让他看不到进大厂的希望。我建议他尝试国外的公司，不过他却一直怀疑自己的英语能力。相反的，我在之前模拟面试的时候遇到一位应该是来自哈萨克斯坦的求职者，他的口语非常差，基本只能说出一些单字，长一点的句子都表达不了。不过，他的算法题完成得非常好，一道题能够给出多个解法，进行逐个分析。而且他相当有礼貌，当我指出代码中一些步骤可以优化的时候，他总会很慢很认真地说谢谢。经过几次模拟面试之后，我问他为什么算法题能够做得那么好，Leetcode 上面完成了多少题。他说全部。我瞬间就感受到他所付出的努力，而且即使他英语多差，作为面试官我也愿意录用他。</p>
<p>除了英语方面，还有不少求职者咨询我大厂招聘的限制，例如这样的学历可以进去吗？外包经验会不会有问题？我很难给出一个答案，因为每家公司与每位求职者的情况都不同。这篇采访从招聘人员的角度给出了一些见解，虽然因为某些原因不能直接给出答案，但是新加坡的公司的门槛并不比国内的公司高，面试难度也不会比国内大厂难，只是大家的侧重点不同。重要的是，就像程序员不应该被编程语言而限制一样，求职者也不应该被母语所限制，不然会非常局限自己的职业生涯。</p>]]></content>
            
            
            
            
            
                
                    
                
                    
                
            
        </entry>
    
</feed>
